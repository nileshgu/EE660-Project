
% load data
clear;clc;close all;
load('../Data/FourFoldData.mat');

%%
% learning algorithm
% TODO: logistic regression here
%% logistic regression
tic;
model = logregFit(X_preTrain, y_preTrain);
[yhat, p] = logregPredict(model, X_preTrain);
[yhat_out, p_out] = logregPredict(model, X_preTest);
errorRate = mean(yhat ~= y_preTrain);
fprintf('Error rate using raw features: %2.f%%\n', 100*errorRate);
errorRate_out = mean(yhat_out ~= y_preTest);
fprintf('Error rate using raw features: %2.f%%\n', 100*errorRate_out);

% plotDecisionBoundary(X, y, @(X)logregPredict(model, X));
% title('linear');
% printPmtkFigure('logregXorLinear')
toc;

%% evaluate the output
yClasses = unique(y_preTrain);
lossEvalFcn(p,y_preTrain,yClasses)
yClasses = unique(y_preTest);
lossEvalFcn(p_out,y_preTest,yClasses)

[yhat_out, p_out] = logregPredict(model, X_test);
errorRate_out = mean(yhat_out ~= y_test);
yClasses = unique(y_preTest);
lossEvalFcn(p_out,y_preTest,yClasses)